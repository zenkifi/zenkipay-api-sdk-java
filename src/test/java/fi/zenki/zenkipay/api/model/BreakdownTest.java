/*
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant's to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.zenki.zenkipay.api.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Breakdown
 */
public class BreakdownTest {
    private final Breakdown model = new Breakdown();

    /**
     * Model tests for Breakdown
     */
    @Test
    public void testBreakdown() {
        // TODO: test Breakdown
    }

    /**
     * Test the property 'currencyCodeIso3'
     */
    @Test
    public void currencyCodeIso3Test() {
        // TODO: test currencyCodeIso3
    }

    /**
     * Test the property 'totalItemsAmount'
     */
    @Test
    public void totalItemsAmountTest() {
        // TODO: test totalItemsAmount
    }

    /**
     * Test the property 'shipmentAmount'
     */
    @Test
    public void shipmentAmountTest() {
        // TODO: test shipmentAmount
    }

    /**
     * Test the property 'subtotalAmount'
     */
    @Test
    public void subtotalAmountTest() {
        // TODO: test subtotalAmount
    }

    /**
     * Test the property 'taxesAmount'
     */
    @Test
    public void taxesAmountTest() {
        // TODO: test taxesAmount
    }

    /**
     * Test the property 'localTaxesAmount'
     */
    @Test
    public void localTaxesAmountTest() {
        // TODO: test localTaxesAmount
    }

    /**
     * Test the property 'importCosts'
     */
    @Test
    public void importCostsTest() {
        // TODO: test importCosts
    }

    /**
     * Test the property 'discountAmount'
     */
    @Test
    public void discountAmountTest() {
        // TODO: test discountAmount
    }

    /**
     * Test the property 'additionalCharges'
     */
    @Test
    public void additionalChargesTest() {
        // TODO: test additionalCharges
    }

    /**
     * Test the property 'grandTotalAmount'
     */
    @Test
    public void grandTotalAmountTest() {
        // TODO: test grandTotalAmount
    }

}
