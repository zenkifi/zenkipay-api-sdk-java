/*
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant's to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.zenki.zenkipay.api.services;

import fi.zenki.zenkipay.api.ApiException;
import fi.zenki.zenkipay.api.model.AuthenticationErrorResponse;
import fi.zenki.zenkipay.api.model.RequestTokenOAuth2;
import fi.zenki.zenkipay.api.model.TokenOAuth2;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * API tests for AuthenticationAndAuthorizationApi
 */
@Ignore
public class AuthenticationAndAuthorizationApiTest {

    private final AuthenticationAndAuthorizationApi api = new AuthenticationAndAuthorizationApi();

    
    /**
     * Create an authentication token in Zenki.
     *
     * This request must be sent each time it is required to generate a token to consume Zenki services.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTokenTest() throws ApiException {
        String contentType = null;
        String accept = null;
        RequestTokenOAuth2 requestTokenOAuth2 = null;
        TokenOAuth2 response = 
        api.createToken(contentType, accept, requestTokenOAuth2);
        
        // TODO: test validations
    }
    
}
